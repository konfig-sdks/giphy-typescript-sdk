/*
Giphy API

Giphy API

The version of the OpenAPI document: 1.0
Contact: support@giphy.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { GifImages } from './gif-images';
import { User } from './user';

/**
 * 
 * @export
 * @interface Gif
 */
export interface Gif {
    /**
     * An array of tags for this GIF (Note: Not available when using the Public Beta Key) 
     * @type {Array<string>}
     * @memberof Gif
     */
    'tags'?: Array<string>;
    /**
     * The unique bit.ly URL for this GIF
     * @type {string}
     * @memberof Gif
     */
    'bitly_url'?: string;
    /**
     * Currently unused
     * @type {string}
     * @memberof Gif
     */
    'content_url'?: string;
    /**
     * The date this GIF was added to the GIPHY database.
     * @type {string}
     * @memberof Gif
     */
    'create_datetime'?: string;
    /**
     * A URL used for embedding this GIF
     * @type {string}
     * @memberof Gif
     */
    'embded_url'?: string;
    /**
     * An array of featured tags for this GIF (Note: Not available when using the Public Beta Key) 
     * @type {Array<string>}
     * @memberof Gif
     */
    'featured_tags'?: Array<string>;
    /**
     * This GIF\'s unique ID
     * @type {string}
     * @memberof Gif
     */
    'id'?: string;
    /**
     * 
     * @type {GifImages}
     * @memberof Gif
     */
    'images'?: GifImages;
    /**
     * The creation or upload date from this GIF\'s source.
     * @type {string}
     * @memberof Gif
     */
    'import_datetime'?: string;
    /**
     * The MPAA-style rating for this content. Examples include Y, G, PG, PG-13 and R
     * @type {string}
     * @memberof Gif
     */
    'rating'?: string;
    /**
     * The unique slug used in this GIF\'s URL
     * @type {string}
     * @memberof Gif
     */
    'slug'?: string;
    /**
     * The page on which this GIF was found
     * @type {string}
     * @memberof Gif
     */
    'source'?: string;
    /**
     * The URL of the webpage on which this GIF was found.
     * @type {string}
     * @memberof Gif
     */
    'source_post_url'?: string;
    /**
     * The top level domain of the source URL.
     * @type {string}
     * @memberof Gif
     */
    'source_tld'?: string;
    /**
     * The date on which this gif was marked trending, if applicable.
     * @type {string}
     * @memberof Gif
     */
    'trending_datetime'?: string;
    /**
     * Type of the gif. By default, this is almost always gif
     * @type {string}
     * @memberof Gif
     */
    'type'?: GifTypeEnum;
    /**
     * The date on which this GIF was last updated.
     * @type {string}
     * @memberof Gif
     */
    'update_datetime'?: string;
    /**
     * The unique URL for this GIF
     * @type {string}
     * @memberof Gif
     */
    'url'?: string;
    /**
     * 
     * @type {User}
     * @memberof Gif
     */
    'user'?: User;
    /**
     * The username this GIF is attached to, if applicable
     * @type {string}
     * @memberof Gif
     */
    'username'?: string;
}

type GifTypeEnum = 'gif'


